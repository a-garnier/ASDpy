# -*- coding: utf-8 -*-
"""3_generate_dataframe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h55O4VWhB4q10wPpiWt2jRxcUPmwWOz9
"""

"""
    list all files in dataframe with path and anomaly status
"""

import numpy as np
import pandas as pd

from os import listdir
from os.path import isfile, join

from joblib import dump, load
import ASDpy.utils as utils

def convertImage2DataframeDir(imageFolder):

    pngfiles = [f for f in listdir(imageFolder) if isfile(join(imageFolder, f))]

    i=0
    bilan = []

    for f in pngfiles:
        if f[-4:] != '.png':
            # ignore non .png files
            continue

        type = f.split('_')[0]

        if type == 'normal':
            anomaly = 0
        else:
            anomaly = 1

        imagePath = imageFolder + f

        #img = plt.imread(imagePath).T

        bilan.append((imagePath, anomaly))

    return pd.DataFrame(bilan, columns=['spectrogram', 'anomaly'])

machines = ['fan', 'pump', 'slider', 'ToyCar', 'ToyConveyor', 'valve']
sets = ['train', 'test']

#dataFolder = '/drive/MyDrive/asdpy/data/original/dc2020task2'
dataFolder = utils.dc2020task2

for machine in machines:

    for s in sets:
        # example : '../data/fan/train_png/'
        imageFolder = dataFolder+'/'+machine+'/'+s+'_png/'

        print("Convert directory ", imageFolder)

        df = convertImage2DataframeDir(imageFolder)
        print(df.shape)
        print(df.head())

        saveName = dataFolder+'/'+machine+'/df_'+machine+'_'+s+'.joblib'
        dump(df, saveName, compress=True)

    # break

import matplotlib.pyplot as plt

def convertDataframe2Matrix(dataframe):

  # convertion des listes d'images en une matrice

  bilan = []
  anomalies = []
  i=0

  from time import time

  for ind in dataframe.index:
    imagePath = dataframe['spectrogram'][ind]
    anomaly = dataframe['anomaly'][ind]
    
    #print(imagePath)

    if (i % 250) == 1:
      print("{}/{}".format(i, len(dataframe)))

    t0 = time()
    img = plt.imread(imagePath).T
    t1 = time() - t0
    #print("imread en {} secondes".format(round(t1,3)))

    #print(img.T)
    #print(img.shape)
          
    # retaille l'image en un vecteur ligne de 40064 éléments
    img = img.reshape(img.shape[0]*img.shape[1])
    
    # ajoute le vecteur à la matrice de données

    t0 = time()
    bilan.append(img)
    anomalies.append(anomaly)
    t1 = time() - t0
    #print("append en {} secondes".format(round(t1,3)))
    i=i+1
    #print("====")


  return np.array(bilan), np.array(anomalies)

machines = ['fan', 'pump', 'slider', 'ToyCar', 'ToyConveyor', 'valve']
sets = ['train']

#dataFolder = '/drive/MyDrive/asdpy/data/original/dc2020task2'
dataFolder = utils.dc2020task2

# va convertir les images en matrices
for machine in machines:

    for s in sets:
        saveName = dataFolder+'/'+machine+'/df_'+machine+'_'+s+'.joblib'
        dataframe = load(saveName)

        bilan, anomalies = convertDataframe2Matrix(dataframe)
        
        matrixSaveName = dataFolder+'/'+machine+'/df_matrices_'+machine+'_'+s+'.joblib'
        print(matrixSaveName)
        dump(bilan, matrixSaveName, compress=True)

        anomaliesSaveName = dataFolder+'/'+machine+'/df_matrices_anomalies_'+machine+'_'+s+'.joblib'
        print(anomaliesSaveName)
        dump(anomalies, anomaliesSaveName, compress=True)

import matplotlib.pyplot as plt

# conversions des différents fichiers mel en un unique dataframe
def convertMel2Dataframe(dataframe):

    files = [f for f in listdir(imageFolder) if isfile(join(imageFolder, f))]

    i=0
    bilan = []

    for f in files:
        print(f)
        if f[-12:] != '_mels.joblib':
            # ignore others files
            continue

        type = f.split('_')[0]

        if type == 'normal':
            anomaly = 0
        else:
            anomaly = 1

        #print("anomaly :", anomaly)

        filePath = imageFolder + f

        #img = plt.imread(filePath).T

        mels = load(filePath)

        # vectorize matrix
        vmels = np.reshape(mels, mels.shape[0]*mels.shape[1])

        line = [filePath] + vmels.tolist() + [anomaly]
        bilan.append(line)

    print(bilan)
      
    return pd.DataFrame(bilan)
    # return pd.DataFrame(bilan, columns=['spectrogram', 'anomaly'])



machines = ['fan', 'pump', 'slider', 'ToyCar', 'ToyConveyor', 'valve']
sets = ['train', 'test']

# dataFolder = '/drive/MyDrive/asdpy/data/original/dc2020task2'
dataFolder = utils.dc2020task2

for machine in machines:

    for s in sets:
        imageFolder = dataFolder+'/'+machine+'/'+s+'_png_128_64/'

        print("Convert directory ", imageFolder)

        df = convertMel2Dataframe(imageFolder)
        print(df.shape)
        print(df.head())

        saveName = dataFolder+'/'+machine+'/df_'+machine+'_128_64_'+s+'.joblib'
        dump(df, saveName, compress=True)

    # break

